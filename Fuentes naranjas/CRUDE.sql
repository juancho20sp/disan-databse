--- SUPPLY
CREATE OR REPLACE PACKAGE PKG_SUPPLY AS
    PROCEDURE ADD_SUPPLY(
        xName IN VARCHAR,
        xAmount IN NUMBER,
        xInventory IN NUMBER
        );

    FUNCTION READ_SUPPLY RETURN SYS_REFCURSOR;

    PROCEDURE UPDATE_SUPPLY(
        xName IN VARCHAR, 
        xAmount IN NUMBER,
         xInventory IN NUMBER
        );
END PKG_SUPPLY;

/

--- SUPPLIES INVENTORY
CREATE OR REPLACE PACKAGE PKG_SUPPLIES_INVENTORY AS
    PROCEDURE ADD_SUPPLIES_INVENTORY(xId IN NUMBER);

    FUNCTION READ_SUPPLIES_INVENTORY RETURN SYS_REFCURSOR;

    PROCEDURE UPDATE_SUPPLIES_INVENTORY(
        xOldId IN NUMBER,
        xNewId IN NUMBER
        );
END PKG_SUPPLIES_INVENTORY;

/

-- MILITARY UNIT
CREATE OR REPLACE PACKAGE PKG_MILITARY_UNIT AS
    -- MILITARY UNIT
    PROCEDURE ADD_MILITARY_UNIT(
        xName IN VARCHAR,
        XCity IN VARCHAR,
        xFullLocation IN VARCHAR
        );

    FUNCTION READ_MILITARY_UNIT RETURN SYS_REFCURSOR;

    PROCEDURE UPDATE_MILITARY_UNIT(
        xId IN NUMBER,
        xName IN VARCHAR,
        xCity IN VARCHAR,
        xFullLocation IN VARCHAR
        );

    -- DIVISION
    PROCEDURE ADD_DIVISION(
        xName IN VARCHAR,
        xCity IN VARCHAR,
        xFullLocation IN VARCHAR,
        xCommander IN VARCHAR,
        xMilitaryForce IN VARCHAR);

    FUNCTION READ_DIVISION RETURN SYS_REFCURSOR;


    -- UPDATE
    PROCEDURE UPDATE_DIVISION(
        xName IN VARCHAR,
        xCommander IN VARCHAR,
        xMilitaryForce IN VARCHAR
        );

END PKG_MILITARY_UNIT;